{"ast":null,"code":"import axios from \"axios\";\nimport authHeader from \"./AuthHeader\";\nconst API_URL = \"http://localhost:8080/api/kms/\";\n\nclass UserService {\n  /*\r\n  getPublicContent() {\r\n    return axios.get(API_URL + \"all\", {\r\n      headers: authHeader(),\r\n    });\r\n  }\r\n  */\n  getUserBoard(userId) {\n    return axios.get(API_URL + \"user/\" + userId, {\n      headers: authHeader()\n    });\n  }\n\n  updateUser(userId, user) {\n    return axios.put(API_URL + \"user-update/\" + userId, user, {\n      headers: authHeader()\n    });\n  }\n\n  getPrincipalBoard() {\n    return axios.get(API_URL + \"principal/student-list/\", {\n      headers: authHeader()\n    });\n  }\n\n  createUser(user) {\n    return axios.post(API_URL + \"principal/add-user/\", user, {\n      headers: authHeader()\n    });\n  }\n\n  getUserById(userId) {\n    return axios.get(API_URL + \"principal/view-user/\" + userId, {\n      headers: authHeader()\n    });\n  }\n\n  updateStudent(userId, user) {\n    return axios.put(API_URL + \"principal/update-student/\" + userId, user, {\n      headers: authHeader()\n    });\n  } // soft delete\n\n\n  removeUser(userId, user) {\n    return axios.put(API_URL + \"principal/remove/\" + userId, user, {\n      headers: authHeader()\n    });\n  }\n\n  getDeletedUser() {\n    return axios.get(API_URL + \"principal/view-deleted-user\", {\n      headers: authHeader()\n    });\n  }\n\n  restoreDeletedUser(userId, user) {\n    return axios.put(API_URL + \"principal/restore/\" + userId, user, {\n      headers: authHeader()\n    });\n  } // hard delete\n\n\n  deleteUser(userId) {\n    return axios.delete(API_URL + \"principal/delete/\" + userId, {\n      headers: authHeader()\n    });\n  }\n\n  forgotPassword(email) {\n    let formData = new FormData();\n    formData.append(\"email\", email);\n    return axios.post(\"http://localhost:8080/forgot_password\", formData);\n  }\n\n  resetPassword(token, password) {\n    let formData = new FormData();\n    formData.append(\"token\", token);\n    formData.append(\"password\", password);\n    return axios.post(\"http://localhost:8080/reset_password\", formData);\n  }\n\n  checkPassword(email, oldPassword) {\n    let formData = new FormData();\n    formData.append(\"email\", email);\n    formData.append(\"oldPassword\", oldPassword);\n    return axios.post(\"http://localhost:8080/change_password/check\", formData, {\n      headers: authHeader()\n    });\n  }\n\n  changePassword(email, password) {\n    let formData = new FormData();\n    formData.append(\"email\", email);\n    formData.append(\"password\", password);\n    return axios.post(\"http://localhost:8080/change_password\", formData, {\n      headers: authHeader()\n    });\n  }\n\n  getAdminBoard() {\n    return axios.get(API_URL + \"admin\", {\n      headers: authHeader()\n    });\n  }\n\n}\n\nexport default new UserService();","map":{"version":3,"sources":["D:/Programming/Projects/KindergartenManagementSystem/Frontend/kindergarten_management_system-frontend/src/services/UserService.js"],"names":["axios","authHeader","API_URL","UserService","getUserBoard","userId","get","headers","updateUser","user","put","getPrincipalBoard","createUser","post","getUserById","updateStudent","removeUser","getDeletedUser","restoreDeletedUser","deleteUser","delete","forgotPassword","email","formData","FormData","append","resetPassword","token","password","checkPassword","oldPassword","changePassword","getAdminBoard"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport authHeader from \"./AuthHeader\";\r\n\r\nconst API_URL = \"http://localhost:8080/api/kms/\";\r\n\r\nclass UserService {\r\n\r\n  /*\r\n  getPublicContent() {\r\n    return axios.get(API_URL + \"all\", {\r\n      headers: authHeader(),\r\n    });\r\n  }\r\n  */\r\n\r\n  getUserBoard(userId) {\r\n    return axios.get(API_URL + \"user/\" + userId, {\r\n      headers: authHeader(),\r\n    });\r\n  }\r\n\r\n  updateUser(userId, user) {\r\n    return axios.put(API_URL + \"user-update/\" + userId, user, {\r\n      headers: authHeader(),\r\n    });\r\n  }\r\n\r\n  getPrincipalBoard() {\r\n    return axios.get(API_URL + \"principal/student-list/\", { headers: authHeader() });\r\n  }\r\n\r\n  createUser(user) {\r\n    return axios.post(API_URL + \"principal/add-user/\", user, {\r\n      headers: authHeader(),\r\n    });\r\n  }\r\n\r\n  getUserById(userId) {\r\n    return axios.get(API_URL + \"principal/view-user/\" + userId, {\r\n      headers: authHeader(),\r\n    });\r\n  }\r\n\r\n  updateStudent(userId, user) {\r\n    return axios.put(API_URL + \"principal/update-student/\" + userId, user, {\r\n      headers: authHeader(),\r\n    });\r\n  }\r\n\r\n  // soft delete\r\n  removeUser(userId, user) {\r\n    return axios.put(API_URL + \"principal/remove/\" + userId,  user,{\r\n      headers: authHeader(),\r\n    });\r\n  }\r\n\r\n  getDeletedUser() {\r\n    return axios.get(API_URL + \"principal/view-deleted-user\", {\r\n      headers: authHeader(),\r\n    });\r\n  }\r\n\r\n  restoreDeletedUser(userId, user) {\r\n    return axios.put(API_URL + \"principal/restore/\" + userId, user, {\r\n      headers: authHeader(),\r\n    });\r\n  }\r\n\r\n  // hard delete\r\n  deleteUser(userId) {\r\n    return axios.delete(API_URL + \"principal/delete/\" + userId, {\r\n      headers: authHeader(),\r\n    });\r\n  }\r\n\r\n  forgotPassword(email) {\r\n    let formData = new FormData();\r\n    formData.append(\"email\", email);\r\n    return axios.post(\"http://localhost:8080/forgot_password\", formData);\r\n  }\r\n\r\n  resetPassword(token, password) {\r\n    let formData = new FormData();\r\n    formData.append(\"token\", token);\r\n    formData.append(\"password\", password);\r\n    return axios.post(\"http://localhost:8080/reset_password\", formData);\r\n  }\r\n\r\n  checkPassword(email, oldPassword) {\r\n    let formData = new FormData();\r\n    formData.append(\"email\", email);\r\n    formData.append(\"oldPassword\", oldPassword);\r\n    return axios.post(\"http://localhost:8080/change_password/check\", formData, {\r\n      headers: authHeader(),\r\n    });\r\n  }\r\n\r\n  changePassword(email, password) {\r\n    let formData = new FormData();\r\n    formData.append(\"email\", email);\r\n    formData.append(\"password\", password);\r\n    return axios.post(\"http://localhost:8080/change_password\", formData, {\r\n      headers: authHeader(),\r\n    });\r\n  }\r\n\r\n  getAdminBoard() {\r\n    return axios.get(API_URL + \"admin\", { headers: authHeader() });\r\n  }\r\n}\r\n\r\nexport default new UserService();\r\n"]},"metadata":{},"sourceType":"module"}