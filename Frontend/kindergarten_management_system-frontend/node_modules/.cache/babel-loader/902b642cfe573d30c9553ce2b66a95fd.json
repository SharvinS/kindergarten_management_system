{"ast":null,"code":"import axios from \"axios\";\nimport authHeader from \"./AuthHeader\";\nconst API_URL = \"http://localhost:8080/api/kms/\";\n\nclass UserService {\n  getPublicContent() {\n    return axios.get(API_URL + \"all\", {\n      headers: authHeader()\n    });\n  }\n\n  getUserBoard(userId) {\n    return axios.get(API_URL + \"user/\" + userId, {\n      headers: authHeader()\n    });\n  }\n\n  updateUser(userId, user) {\n    return axios.put(API_URL + \"user-update/\" + userId, user, {\n      headers: authHeader()\n    });\n  }\n\n  getPrincipalBoard() {\n    return axios.get(API_URL + \"principal/student-list/\", {\n      headers: authHeader()\n    });\n  }\n\n  createUser(user) {\n    return axios.post(API_URL + \"principal/add-user/\", user, {\n      headers: authHeader()\n    });\n  }\n\n  getUserById(userId) {\n    return axios.get(API_URL + \"principal/view-user/\" + userId, {\n      headers: authHeader()\n    });\n  }\n\n  updateStudent(userId, user) {\n    return axios.put(API_URL + \"principal/update-student/\" + userId, user, {\n      headers: authHeader()\n    });\n  } // soft delete\n\n\n  removeUser(id) {\n    return axios.put(API_URL + \"principal/remove/\" + id, {\n      headers: authHeader()\n    });\n  }\n\n  getDeletedUser() {\n    return axios.get(API_URL + \"principal/view-deleted-user\", {\n      headers: authHeader()\n    });\n  }\n\n  restoreDeletedUser(userId) {\n    return axios.put(API_URL + \"principal/restore/\" + userId, {\n      headers: authHeader()\n    });\n  } // hard delete\n\n\n  deleteUser(userId) {\n    return axios.delete(API_URL + \"principal/delete/\" + userId, {\n      headers: authHeader()\n    });\n  }\n\n  forgotPassword(email) {\n    let formData = new FormData();\n    formData.append(\"email\", email);\n    return axios.post(\"http://localhost:8080/forgot_password\", formData);\n  }\n\n  resetPassword(token, password) {\n    let formData = new FormData();\n    formData.append(\"token\", token);\n    formData.append(\"password\", password);\n    return axios.post(\"http://localhost:8080/reset_password\", formData);\n  }\n\n  checkPassword(email, oldPassword) {\n    let formData = new FormData();\n    formData.append(\"email\", email);\n    formData.append(\"oldPassword\", oldPassword);\n    return axios.post(\"http://localhost:8080/change_password/check\", formData, {\n      headers: authHeader()\n    });\n  }\n\n  changePassword(email, password) {\n    let formData = new FormData();\n    formData.append(\"email\", email);\n    formData.append(\"password\", password);\n    return axios.post(\"http://localhost:8080/change_password\", formData, {\n      headers: authHeader()\n    });\n  }\n\n  getAdminBoard() {\n    return axios.get(API_URL + \"admin\", {\n      headers: authHeader()\n    });\n  }\n\n}\n\nexport default new UserService();","map":{"version":3,"sources":["D:/Programming/Projects/KindergartenManagementSystem/Frontend/kindergarten_management_system-frontend/src/services/UserService.js"],"names":["axios","authHeader","API_URL","UserService","getPublicContent","get","headers","getUserBoard","userId","updateUser","user","put","getPrincipalBoard","createUser","post","getUserById","updateStudent","removeUser","id","getDeletedUser","restoreDeletedUser","deleteUser","delete","forgotPassword","email","formData","FormData","append","resetPassword","token","password","checkPassword","oldPassword","changePassword","getAdminBoard"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport authHeader from \"./AuthHeader\";\r\n\r\nconst API_URL = \"http://localhost:8080/api/kms/\";\r\n\r\nclass UserService {\r\n  getPublicContent() {\r\n    return axios.get(API_URL + \"all\", {\r\n      headers: authHeader(),\r\n    });\r\n  }\r\n\r\n  getUserBoard(userId) {\r\n    return axios.get(API_URL + \"user/\" + userId, {\r\n      headers: authHeader(),\r\n    });\r\n  }\r\n\r\n  updateUser(userId, user) {\r\n    return axios.put(API_URL + \"user-update/\" + userId, user, {\r\n      headers: authHeader(),\r\n    });\r\n  }\r\n\r\n  getPrincipalBoard() {\r\n    return axios.get(API_URL + \"principal/student-list/\", { headers: authHeader() });\r\n  }\r\n\r\n  createUser(user) {\r\n    return axios.post(API_URL + \"principal/add-user/\", user, {\r\n      headers: authHeader(),\r\n    });\r\n  }\r\n\r\n  getUserById(userId) {\r\n    return axios.get(API_URL + \"principal/view-user/\" + userId, {\r\n      headers: authHeader(),\r\n    });\r\n  }\r\n\r\n  updateStudent(userId, user) {\r\n    return axios.put(API_URL + \"principal/update-student/\" + userId, user, {\r\n      headers: authHeader(),\r\n    });\r\n  }\r\n\r\n  // soft delete\r\n  removeUser(id) {\r\n    return axios.put(API_URL + \"principal/remove/\" + id, {\r\n      headers: authHeader(),\r\n    });\r\n  }\r\n\r\n  getDeletedUser() {\r\n    return axios.get(API_URL + \"principal/view-deleted-user\", {\r\n      headers: authHeader(),\r\n    });\r\n  }\r\n\r\n  restoreDeletedUser(userId) {\r\n    return axios.put(API_URL + \"principal/restore/\" + userId, {\r\n      headers: authHeader(),\r\n    });\r\n  }\r\n\r\n  // hard delete\r\n  deleteUser(userId) {\r\n    return axios.delete(API_URL + \"principal/delete/\" + userId, {\r\n      headers: authHeader(),\r\n    });\r\n  }\r\n\r\n  forgotPassword(email) {\r\n    let formData = new FormData();\r\n    formData.append(\"email\", email);\r\n    return axios.post(\"http://localhost:8080/forgot_password\", formData);\r\n  }\r\n\r\n  resetPassword(token, password) {\r\n    let formData = new FormData();\r\n    formData.append(\"token\", token);\r\n    formData.append(\"password\", password);\r\n    return axios.post(\"http://localhost:8080/reset_password\", formData);\r\n  }\r\n\r\n  checkPassword(email, oldPassword) {\r\n    let formData = new FormData();\r\n    formData.append(\"email\", email);\r\n    formData.append(\"oldPassword\", oldPassword);\r\n    return axios.post(\"http://localhost:8080/change_password/check\", formData, {\r\n      headers: authHeader(),\r\n    });\r\n  }\r\n\r\n  changePassword(email, password) {\r\n    let formData = new FormData();\r\n    formData.append(\"email\", email);\r\n    formData.append(\"password\", password);\r\n    return axios.post(\"http://localhost:8080/change_password\", formData, {\r\n      headers: authHeader(),\r\n    });\r\n  }\r\n\r\n  getAdminBoard() {\r\n    return axios.get(API_URL + \"admin\", { headers: authHeader() });\r\n  }\r\n}\r\n\r\nexport default new UserService();\r\n"]},"metadata":{},"sourceType":"module"}