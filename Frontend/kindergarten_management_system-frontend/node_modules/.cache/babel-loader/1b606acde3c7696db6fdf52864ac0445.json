{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming\\\\Projects\\\\KindergartenManagementSystem\\\\Frontend\\\\kindergarten_management_system-frontend\\\\src\\\\components\\\\ChangePasswordComponent.js\";\nimport React, { Component } from \"react\";\nimport UserService from \"../services/UserService\";\nimport AuthService from \"../services/AuthService\";\nimport Form from \"react-validation/build/form\";\nimport CheckButton from \"react-validation/build/button\";\nimport swal from \"@sweetalert/with-react\";\n\nclass ChangePasswordComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.oldPasswordHandler = e => {\n      this.setState({\n        oldPassword: e.target.value\n      });\n    };\n\n    this.changePasswordHandler = e => {\n      this.setState({\n        password: e.target.value\n      });\n    };\n\n    this.confirmPasswordHandler = e => {\n      this.setState({\n        confirmPassword: e.target.value\n      });\n    };\n\n    this.savePassword = e => {\n      e.preventDefault();\n      this.setState({\n        oldPasswordError: \"\",\n        passwordError: \"\",\n        confirmPasswordError: \"\",\n        problems: 0,\n        successful: false,\n        message: \"\"\n      });\n\n      if (this.state.password === \"\") {\n        window.scrollTo(0, 0);\n        this.setState({\n          passwordError: \"Please enter a valid password\",\n          problems: 1\n        });\n      }\n\n      if (this.state.confirmPassword === \"\") {\n        window.scrollTo(0, 0);\n        this.setState({\n          confirmPasswordError: \"Please enter a valid password\",\n          problems: 1\n        });\n      }\n\n      if (this.state.password === this.state.oldPassword) {\n        window.scrollTo(0, 0);\n        this.setState({\n          passwordError: \"New password must differ from your previous password\",\n          problems: 1\n        });\n      }\n\n      if (this.state.password !== this.state.confirmPassword) {\n        window.scrollTo(0, 0);\n        this.setState({\n          confirmPasswordError: \"Password not match\",\n          problems: 1\n        });\n      }\n\n      if (this.state.password.length < 8) {\n        window.scrollTo(0, 0);\n        this.setState({\n          passwordError: \"Password length must be at least 8 characters\",\n          problems: 1\n        });\n      }\n\n      if (this.state.password.search(/[a-z]/i) < 0) {\n        window.scrollTo(0, 0);\n        this.setState({\n          passwordError: \"Your password must contain at least one letter\",\n          problems: 1\n        });\n      }\n\n      if (this.state.password.search(/[0-9]/) < 0) {\n        window.scrollTo(0, 0);\n        this.setState({\n          passwordError: \"Your password must contain at least one digit\",\n          problems: 1\n        });\n      }\n\n      if (this.state.password.search(/[?=.*[!@#\\$%\\^&\\*]/) < 0) {\n        window.scrollTo(0, 0);\n        this.setState({\n          passwordError: \"Your password must contain at least one special characters\",\n          problems: 1\n        });\n      }\n\n      console.log(this.state.problems);\n\n      if (this.checkBtn.context._errors.length === 0) {\n        UserService.checkPassword(this.state.user.email, this.state.oldPassword).then(response => {\n          this.setState({});\n        }, error => {\n          const resMessage = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n          this.setState({\n            successful: false,\n            message: resMessage\n          });\n        });\n\n        if (this.state.problems === 0) {\n          UserService.changePassword(this.state.user.email, this.state.password).then(response => {\n            this.setState({//   message: response.data.message,\n              //   successful: true,\n            });\n            swal( /*#__PURE__*/React.createElement(\"div\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 15\n              }\n            }, /*#__PURE__*/React.createElement(\"p\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 17\n              }\n            }, \"You have successfully changed your password\")));\n            this.props.history.push(`/profile`);\n          }, error => {\n            const resMessage = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n            this.setState({\n              successful: false,\n              message: resMessage\n            });\n          });\n        }\n      }\n    };\n\n    this.state = {\n      id: this.props.match.params.id,\n      email: \"\",\n      oldPassword: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      user: [],\n      userReady: false,\n      successful: false,\n      message: \"\"\n    };\n    this.oldPasswordHandler = this.oldPasswordHandler.bind(this);\n    this.changePasswordHandler = this.changePasswordHandler.bind(this);\n    this.confirmPasswordHandler = this.confirmPasswordHandler.bind(this);\n    this.savePassword = this.savePassword.bind(this);\n  }\n\n  componentDidMount() {\n    localStorage.getItem(\"user\");\n    const currentUser = AuthService.getCurrentUser();\n    this.setState({\n      currentUser: currentUser,\n      userReady: true\n    });\n    UserService.getUserBoard(currentUser.id).then(res => {\n      this.setState({\n        user: res.data\n      });\n    });\n    console.log(currentUser.email);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }\n    }, \"Change Password\")), /*#__PURE__*/React.createElement(Form, {\n      style: {\n        width: \"420px\",\n        margin: \"0 auto\"\n      },\n      onSubmit: this.savePassword,\n      ref: c => {\n        this.form = c;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }\n    }, !this.state.successful && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"border border-secondary rounded p-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      name: \"oldPassword\",\n      className: \"form-control\",\n      required: true,\n      autoFocus: true,\n      placeholder: \"Enter your old password\",\n      value: this.state.oldPassword,\n      onChange: this.oldPasswordHandler,\n      maxLength: \"120\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"small\", {\n      id: \"passwordHelp\",\n      className: \"text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 17\n      }\n    }, this.state.message && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: this.state.successful ? \"alert alert-success\" : \"text-danger\",\n      role: \"alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 23\n      }\n    }, this.state.message)))), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      id: \"password\",\n      className: \"form-control\",\n      required: true,\n      placeholder: \"Enter your new password\",\n      value: this.state.password,\n      onChange: this.changePasswordHandler,\n      maxLength: \"120\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"small\", {\n      id: \"passwordHelp\",\n      className: \"text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 17\n      }\n    }, this.state.passwordError, \" \")), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      name: \"confirmPassword\",\n      className: \"form-control\",\n      required: true,\n      placeholder: \"Confirm your new password\",\n      value: this.state.confirmPassword,\n      onChange: this.confirmPasswordHandler,\n      maxLength: \"120\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"small\", {\n      id: \"passwordHelp\",\n      className: \"text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 17\n      }\n    }, this.state.confirmPasswordError, \" \")), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 17\n      }\n    }, \"Save\"))), /*#__PURE__*/React.createElement(CheckButton, {\n      style: {\n        display: \"none\"\n      },\n      ref: c => {\n        this.checkBtn = c;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default ChangePasswordComponent;","map":{"version":3,"sources":["D:/Programming/Projects/KindergartenManagementSystem/Frontend/kindergarten_management_system-frontend/src/components/ChangePasswordComponent.js"],"names":["React","Component","UserService","AuthService","Form","CheckButton","swal","ChangePasswordComponent","constructor","props","oldPasswordHandler","e","setState","oldPassword","target","value","changePasswordHandler","password","confirmPasswordHandler","confirmPassword","savePassword","preventDefault","oldPasswordError","passwordError","confirmPasswordError","problems","successful","message","state","window","scrollTo","length","search","console","log","checkBtn","context","_errors","checkPassword","user","email","then","response","error","resMessage","data","toString","changePassword","history","push","id","match","params","userReady","bind","componentDidMount","localStorage","getItem","currentUser","getCurrentUser","getUserBoard","res","render","width","margin","c","form","display"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport UserService from \"../services/UserService\";\r\nimport AuthService from \"../services/AuthService\";\r\nimport Form from \"react-validation/build/form\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport swal from \"@sweetalert/with-react\";\r\n\r\nclass ChangePasswordComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id: this.props.match.params.id,\r\n      email: \"\",\r\n      oldPassword: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      user: [],\r\n      userReady: false,\r\n      successful: false,\r\n      message: \"\",\r\n    };\r\n    this.oldPasswordHandler = this.oldPasswordHandler.bind(this);\r\n    this.changePasswordHandler = this.changePasswordHandler.bind(this);\r\n    this.confirmPasswordHandler = this.confirmPasswordHandler.bind(this);\r\n    this.savePassword = this.savePassword.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    localStorage.getItem(\"user\");\r\n    const currentUser = AuthService.getCurrentUser();\r\n\r\n    this.setState({ currentUser: currentUser, userReady: true });\r\n\r\n    UserService.getUserBoard(currentUser.id).then((res) => {\r\n      this.setState({\r\n        user: res.data,\r\n      });\r\n    });\r\n    console.log(currentUser.email);\r\n  }\r\n\r\n  oldPasswordHandler = (e) => {\r\n    this.setState({ oldPassword: e.target.value });\r\n  };\r\n\r\n  changePasswordHandler = (e) => {\r\n    this.setState({ password: e.target.value });\r\n  };\r\n\r\n  confirmPasswordHandler = (e) => {\r\n    this.setState({ confirmPassword: e.target.value });\r\n  };\r\n\r\n  savePassword = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      oldPasswordError: \"\",\r\n      passwordError: \"\",\r\n      confirmPasswordError: \"\",\r\n      problems: 0,\r\n      successful: false,\r\n      message: \"\",\r\n    });\r\n\r\n    if (this.state.password === \"\") {\r\n      window.scrollTo(0, 0);\r\n      this.setState({\r\n        passwordError: \"Please enter a valid password\",\r\n        problems: 1,\r\n      });\r\n    }\r\n\r\n    if (this.state.confirmPassword === \"\") {\r\n      window.scrollTo(0, 0);\r\n      this.setState({\r\n        confirmPasswordError: \"Please enter a valid password\",\r\n        problems: 1,\r\n      });\r\n    }\r\n\r\n    if (this.state.password === this.state.oldPassword) {\r\n      window.scrollTo(0, 0);\r\n      this.setState({\r\n        passwordError: \"New password must differ from your previous password\",\r\n        problems: 1,\r\n      });\r\n    }\r\n\r\n    if (this.state.password !== this.state.confirmPassword) {\r\n      window.scrollTo(0, 0);\r\n      this.setState({\r\n        confirmPasswordError: \"Password not match\",\r\n        problems: 1,\r\n      });\r\n    }\r\n\r\n    if (this.state.password.length < 8) {\r\n      window.scrollTo(0, 0);\r\n      this.setState({\r\n        passwordError: \"Password length must be at least 8 characters\",\r\n        problems: 1,\r\n      });\r\n    }\r\n\r\n    if (this.state.password.search(/[a-z]/i) < 0) {\r\n      window.scrollTo(0, 0);\r\n      this.setState({\r\n        passwordError: \"Your password must contain at least one letter\",\r\n        problems: 1,\r\n      });\r\n    }\r\n\r\n    if (this.state.password.search(/[0-9]/) < 0) {\r\n      window.scrollTo(0, 0);\r\n      this.setState({\r\n        passwordError: \"Your password must contain at least one digit\",\r\n        problems: 1,\r\n      });\r\n    }\r\n\r\n    if (this.state.password.search(/[?=.*[!@#\\$%\\^&\\*]/) < 0) {\r\n      window.scrollTo(0, 0);\r\n      this.setState({\r\n        passwordError:\r\n          \"Your password must contain at least one special characters\",\r\n        problems: 1,\r\n      });\r\n    }\r\n\r\n    console.log(this.state.problems);\r\n\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      UserService.checkPassword(\r\n        this.state.user.email,\r\n        this.state.oldPassword\r\n      ).then(\r\n        (response) => {\r\n          this.setState({\r\n            \r\n          });\r\n        },\r\n        (error) => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n          this.setState({\r\n            successful: false,\r\n            message: resMessage,\r\n          });\r\n        }\r\n      );\r\n      if (this.state.problems === 0) {\r\n        UserService.changePassword(\r\n          this.state.user.email,\r\n          this.state.password\r\n        ).then(\r\n          (response) => {\r\n            this.setState({\r\n              //   message: response.data.message,\r\n              //   successful: true,\r\n            });\r\n            swal(\r\n              <div>\r\n                <p>You have successfully changed your password</p>\r\n              </div>\r\n            );\r\n            this.props.history.push(`/profile`);\r\n          },\r\n          (error) => {\r\n            const resMessage =\r\n              (error.response &&\r\n                error.response.data &&\r\n                error.response.data.message) ||\r\n              error.message ||\r\n              error.toString();\r\n\r\n            this.setState({\r\n              successful: false,\r\n              message: resMessage,\r\n            });\r\n          }\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>\r\n          <h2 className=\"text-center\">Change Password</h2>\r\n        </div>\r\n        <Form\r\n          style={{ width: \"420px\", margin: \"0 auto\" }}\r\n          onSubmit={this.savePassword}\r\n          ref={(c) => {\r\n            this.form = c;\r\n          }}\r\n        >\r\n          {!this.state.successful && (\r\n            <div className=\"border border-secondary rounded p-3\">\r\n              <p>\r\n                <input\r\n                  type=\"password\"\r\n                  name=\"oldPassword\"\r\n                  className=\"form-control\"\r\n                  required\r\n                  autoFocus\r\n                  placeholder=\"Enter your old password\"\r\n                  value={this.state.oldPassword}\r\n                  onChange={this.oldPasswordHandler}\r\n                  maxLength=\"120\"\r\n                />\r\n                <small id=\"passwordHelp\" className=\"text-danger\">\r\n                  {this.state.message && (\r\n                    <div className=\"form-group\">\r\n                      <div\r\n                        className={\r\n                          this.state.successful\r\n                            ? \"alert alert-success\"\r\n                            : \"text-danger\"\r\n                        }\r\n                        role=\"alert\"\r\n                      >\r\n                        {this.state.message}\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </small>\r\n              </p>\r\n\r\n              <p>\r\n                <input\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  id=\"password\"\r\n                  className=\"form-control\"\r\n                  required\r\n                  placeholder=\"Enter your new password\"\r\n                  value={this.state.password}\r\n                  onChange={this.changePasswordHandler}\r\n                  maxLength=\"120\"\r\n                />\r\n                <small id=\"passwordHelp\" className=\"text-danger\">\r\n                  {this.state.passwordError}{\" \"}\r\n                </small>\r\n              </p>\r\n\r\n              <p>\r\n                <input\r\n                  type=\"password\"\r\n                  name=\"confirmPassword\"\r\n                  className=\"form-control\"\r\n                  required\r\n                  placeholder=\"Confirm your new password\"\r\n                  value={this.state.confirmPassword}\r\n                  onChange={this.confirmPasswordHandler}\r\n                  maxLength=\"120\"\r\n                />\r\n                <small id=\"passwordHelp\" className=\"text-danger\">\r\n                  {this.state.confirmPasswordError}{\" \"}\r\n                </small>\r\n              </p>\r\n\r\n              <p className=\"text-center\">\r\n                <button className=\"btn btn-success\">Save</button>\r\n              </p>\r\n            </div>\r\n          )}\r\n          \r\n          <CheckButton\r\n            style={{ display: \"none\" }}\r\n            ref={(c) => {\r\n              this.checkBtn = c;\r\n            }}\r\n          />\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ChangePasswordComponent;\r\n"]},"metadata":{},"sourceType":"module"}