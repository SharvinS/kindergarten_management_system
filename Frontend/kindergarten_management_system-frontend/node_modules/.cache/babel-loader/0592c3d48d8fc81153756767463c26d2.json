{"ast":null,"code":"import axios from \"axios\";\nimport authHeader from \"./auth-header\";\nconst API_URL = \"http://localhost:8080/api/kms/\";\n\nclass UserService {\n  getPublicContent() {\n    return axios.get(API_URL + \"all\");\n  }\n\n  getUserBoard(userId) {\n    return axios.get(API_URL + \"user/\" + userId, {\n      headers: authHeader()\n    });\n  }\n\n  updateUser(userId, user) {\n    return axios.put(API_URL + \"user-update/\" + userId, user, {\n      headers: authHeader()\n    });\n  }\n\n  getPrincipalBoard() {\n    return axios.get(API_URL + \"principal/student-list\", {\n      headers: authHeader()\n    });\n  }\n\n  createUser(user) {\n    return axios.post(API_URL + \"principal/add-user/\", user, {\n      headers: authHeader()\n    });\n  }\n\n  getEmployeeById(userId) {\n    return axios.get(API_URL + \"hr/view-employee/\" + userId, {\n      headers: authHeader()\n    });\n  }\n\n  updateEmployee(userId, employee) {\n    return axios.put(API_URL + \"hr/update-employee/\" + userId, employee, {\n      headers: authHeader()\n    });\n  } // soft delete\n\n\n  removeEmployee(userId) {\n    return axios.put(API_URL + \"hr/remove/\" + userId, {\n      headers: authHeader()\n    });\n  }\n\n  getDeletedEmployee() {\n    return axios.get(API_URL + \"hr/view-deleted-employee\", {\n      headers: authHeader()\n    });\n  }\n\n  restoreDeletedEmployee(userId) {\n    return axios.put(API_URL + \"hr/restore/\" + userId, {\n      headers: authHeader()\n    });\n  } // hard delete\n\n\n  deleteEmployee(userId) {\n    return axios.delete(API_URL + \"hr/delete/\" + userId, {\n      headers: authHeader()\n    });\n  }\n\n  forgotPassword(email) {\n    let formData = new FormData();\n    formData.append(\"email\", email);\n    return axios.post(\"http://localhost:8080/forgot_password\", formData);\n  }\n\n  resetPassword(token, password) {\n    let formData = new FormData();\n    formData.append(\"token\", token);\n    formData.append(\"password\", password);\n    return axios.post(\"http://localhost:8080/reset_password\", formData);\n  }\n\n  checkPassword(email, oldPassword) {\n    let formData = new FormData();\n    formData.append(\"email\", email);\n    formData.append(\"oldPassword\", oldPassword);\n    return axios.post(\"http://localhost:8080/change_password/check\", formData, {\n      headers: authHeader()\n    });\n  }\n\n  changePassword(email, password) {\n    let formData = new FormData();\n    formData.append(\"email\", email);\n    formData.append(\"password\", password);\n    return axios.post(\"http://localhost:8080/change_password\", formData, {\n      headers: authHeader()\n    });\n  }\n\n  getAdminBoard() {\n    return axios.get(API_URL + \"admin\", {\n      headers: authHeader()\n    });\n  }\n\n}\n\nexport default new UserService();","map":{"version":3,"sources":["D:/Programming/Projects/KindergartenManagementSystem/Frontend/kindergarten_management_system-frontend/src/services/user-service.js"],"names":["axios","authHeader","API_URL","UserService","getPublicContent","get","getUserBoard","userId","headers","updateUser","user","put","getPrincipalBoard","createUser","post","getEmployeeById","updateEmployee","employee","removeEmployee","getDeletedEmployee","restoreDeletedEmployee","deleteEmployee","delete","forgotPassword","email","formData","FormData","append","resetPassword","token","password","checkPassword","oldPassword","changePassword","getAdminBoard"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AAEA,MAAMC,OAAO,GAAG,gCAAhB;;AAEA,MAAMC,WAAN,CAAkB;AAChBC,EAAAA,gBAAgB,GAAG;AACjB,WAAOJ,KAAK,CAACK,GAAN,CAAUH,OAAO,GAAG,KAApB,CAAP;AACD;;AAEDI,EAAAA,YAAY,CAACC,MAAD,EAAS;AACnB,WAAOP,KAAK,CAACK,GAAN,CAAUH,OAAO,GAAG,OAAV,GAAoBK,MAA9B,EAAsC;AAC3CC,MAAAA,OAAO,EAAEP,UAAU;AADwB,KAAtC,CAAP;AAGD;;AAEDQ,EAAAA,UAAU,CAACF,MAAD,EAASG,IAAT,EAAe;AACvB,WAAOV,KAAK,CAACW,GAAN,CAAUT,OAAO,GAAG,cAAV,GAA2BK,MAArC,EAA6CG,IAA7C,EAAmD;AACxDF,MAAAA,OAAO,EAAEP,UAAU;AADqC,KAAnD,CAAP;AAGD;;AAEDW,EAAAA,iBAAiB,GAAG;AAClB,WAAOZ,KAAK,CAACK,GAAN,CAAUH,OAAO,GAAG,wBAApB,EAA8C;AAAEM,MAAAA,OAAO,EAAEP,UAAU;AAArB,KAA9C,CAAP;AACD;;AAEDY,EAAAA,UAAU,CAACH,IAAD,EAAO;AACf,WAAOV,KAAK,CAACc,IAAN,CAAWZ,OAAO,GAAG,qBAArB,EAA4CQ,IAA5C,EAAkD;AACvDF,MAAAA,OAAO,EAAEP,UAAU;AADoC,KAAlD,CAAP;AAGD;;AAEDc,EAAAA,eAAe,CAACR,MAAD,EAAS;AACtB,WAAOP,KAAK,CAACK,GAAN,CAAUH,OAAO,GAAG,mBAAV,GAAgCK,MAA1C,EAAkD;AACvDC,MAAAA,OAAO,EAAEP,UAAU;AADoC,KAAlD,CAAP;AAGD;;AAEDe,EAAAA,cAAc,CAACT,MAAD,EAASU,QAAT,EAAmB;AAC/B,WAAOjB,KAAK,CAACW,GAAN,CAAUT,OAAO,GAAG,qBAAV,GAAkCK,MAA5C,EAAoDU,QAApD,EAA8D;AACnET,MAAAA,OAAO,EAAEP,UAAU;AADgD,KAA9D,CAAP;AAGD,GArCe,CAuChB;;;AACAiB,EAAAA,cAAc,CAACX,MAAD,EAAS;AACrB,WAAOP,KAAK,CAACW,GAAN,CAAUT,OAAO,GAAG,YAAV,GAAyBK,MAAnC,EAA2C;AAChDC,MAAAA,OAAO,EAAEP,UAAU;AAD6B,KAA3C,CAAP;AAGD;;AAEDkB,EAAAA,kBAAkB,GAAG;AACnB,WAAOnB,KAAK,CAACK,GAAN,CAAUH,OAAO,GAAG,0BAApB,EAAgD;AACrDM,MAAAA,OAAO,EAAEP,UAAU;AADkC,KAAhD,CAAP;AAGD;;AAEDmB,EAAAA,sBAAsB,CAACb,MAAD,EAAS;AAC7B,WAAOP,KAAK,CAACW,GAAN,CAAUT,OAAO,GAAG,aAAV,GAA0BK,MAApC,EAA4C;AACjDC,MAAAA,OAAO,EAAEP,UAAU;AAD8B,KAA5C,CAAP;AAGD,GAxDe,CA0DhB;;;AACAoB,EAAAA,cAAc,CAACd,MAAD,EAAS;AACrB,WAAOP,KAAK,CAACsB,MAAN,CAAapB,OAAO,GAAG,YAAV,GAAyBK,MAAtC,EAA8C;AACnDC,MAAAA,OAAO,EAAEP,UAAU;AADgC,KAA9C,CAAP;AAGD;;AAEDsB,EAAAA,cAAc,CAACC,KAAD,EAAQ;AACpB,QAAIC,QAAQ,GAAG,IAAIC,QAAJ,EAAf;AACAD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBH,KAAzB;AACA,WAAOxB,KAAK,CAACc,IAAN,CAAW,uCAAX,EAAoDW,QAApD,CAAP;AACD;;AAEDG,EAAAA,aAAa,CAACC,KAAD,EAAQC,QAAR,EAAkB;AAC7B,QAAIL,QAAQ,GAAG,IAAIC,QAAJ,EAAf;AACAD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBE,KAAzB;AACAJ,IAAAA,QAAQ,CAACE,MAAT,CAAgB,UAAhB,EAA4BG,QAA5B;AACA,WAAO9B,KAAK,CAACc,IAAN,CAAW,sCAAX,EAAmDW,QAAnD,CAAP;AACD;;AAEDM,EAAAA,aAAa,CAACP,KAAD,EAAQQ,WAAR,EAAqB;AAChC,QAAIP,QAAQ,GAAG,IAAIC,QAAJ,EAAf;AACAD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBH,KAAzB;AACAC,IAAAA,QAAQ,CAACE,MAAT,CAAgB,aAAhB,EAA+BK,WAA/B;AACA,WAAOhC,KAAK,CAACc,IAAN,CAAW,6CAAX,EAA0DW,QAA1D,EAAoE;AACzEjB,MAAAA,OAAO,EAAEP,UAAU;AADsD,KAApE,CAAP;AAGD;;AAEDgC,EAAAA,cAAc,CAACT,KAAD,EAAQM,QAAR,EAAkB;AAC9B,QAAIL,QAAQ,GAAG,IAAIC,QAAJ,EAAf;AACAD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBH,KAAzB;AACAC,IAAAA,QAAQ,CAACE,MAAT,CAAgB,UAAhB,EAA4BG,QAA5B;AACA,WAAO9B,KAAK,CAACc,IAAN,CAAW,uCAAX,EAAoDW,QAApD,EAA8D;AACnEjB,MAAAA,OAAO,EAAEP,UAAU;AADgD,KAA9D,CAAP;AAGD;;AAEDiC,EAAAA,aAAa,GAAG;AACd,WAAOlC,KAAK,CAACK,GAAN,CAAUH,OAAO,GAAG,OAApB,EAA6B;AAAEM,MAAAA,OAAO,EAAEP,UAAU;AAArB,KAA7B,CAAP;AACD;;AAlGe;;AAqGlB,eAAe,IAAIE,WAAJ,EAAf","sourcesContent":["import axios from \"axios\";\r\nimport authHeader from \"./auth-header\";\r\n\r\nconst API_URL = \"http://localhost:8080/api/kms/\";\r\n\r\nclass UserService {\r\n  getPublicContent() {\r\n    return axios.get(API_URL + \"all\");\r\n  }\r\n\r\n  getUserBoard(userId) {\r\n    return axios.get(API_URL + \"user/\" + userId, {\r\n      headers: authHeader(),\r\n    });\r\n  }\r\n\r\n  updateUser(userId, user) {\r\n    return axios.put(API_URL + \"user-update/\" + userId, user, {\r\n      headers: authHeader(),\r\n    });\r\n  }\r\n\r\n  getPrincipalBoard() {\r\n    return axios.get(API_URL + \"principal/student-list\", { headers: authHeader() });\r\n  }\r\n\r\n  createUser(user) {\r\n    return axios.post(API_URL + \"principal/add-user/\", user, {\r\n      headers: authHeader(),\r\n    });\r\n  }\r\n\r\n  getEmployeeById(userId) {\r\n    return axios.get(API_URL + \"hr/view-employee/\" + userId, {\r\n      headers: authHeader(),\r\n    });\r\n  }\r\n\r\n  updateEmployee(userId, employee) {\r\n    return axios.put(API_URL + \"hr/update-employee/\" + userId, employee, {\r\n      headers: authHeader(),\r\n    });\r\n  }\r\n\r\n  // soft delete\r\n  removeEmployee(userId) {\r\n    return axios.put(API_URL + \"hr/remove/\" + userId, {\r\n      headers: authHeader(),\r\n    });\r\n  }\r\n\r\n  getDeletedEmployee() {\r\n    return axios.get(API_URL + \"hr/view-deleted-employee\", {\r\n      headers: authHeader(),\r\n    });\r\n  }\r\n\r\n  restoreDeletedEmployee(userId) {\r\n    return axios.put(API_URL + \"hr/restore/\" + userId, {\r\n      headers: authHeader(),\r\n    });\r\n  }\r\n\r\n  // hard delete\r\n  deleteEmployee(userId) {\r\n    return axios.delete(API_URL + \"hr/delete/\" + userId, {\r\n      headers: authHeader(),\r\n    });\r\n  }\r\n\r\n  forgotPassword(email) {\r\n    let formData = new FormData();\r\n    formData.append(\"email\", email);\r\n    return axios.post(\"http://localhost:8080/forgot_password\", formData);\r\n  }\r\n\r\n  resetPassword(token, password) {\r\n    let formData = new FormData();\r\n    formData.append(\"token\", token);\r\n    formData.append(\"password\", password);\r\n    return axios.post(\"http://localhost:8080/reset_password\", formData);\r\n  }\r\n\r\n  checkPassword(email, oldPassword) {\r\n    let formData = new FormData();\r\n    formData.append(\"email\", email);\r\n    formData.append(\"oldPassword\", oldPassword);\r\n    return axios.post(\"http://localhost:8080/change_password/check\", formData, {\r\n      headers: authHeader(),\r\n    });\r\n  }\r\n\r\n  changePassword(email, password) {\r\n    let formData = new FormData();\r\n    formData.append(\"email\", email);\r\n    formData.append(\"password\", password);\r\n    return axios.post(\"http://localhost:8080/change_password\", formData, {\r\n      headers: authHeader(),\r\n    });\r\n  }\r\n\r\n  getAdminBoard() {\r\n    return axios.get(API_URL + \"admin\", { headers: authHeader() });\r\n  }\r\n}\r\n\r\nexport default new UserService();\r\n"]},"metadata":{},"sourceType":"module"}