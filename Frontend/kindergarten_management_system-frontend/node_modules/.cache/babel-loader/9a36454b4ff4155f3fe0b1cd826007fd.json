{"ast":null,"code":"import axios from \"axios\";\nimport authHeader from \"./auth-header\";\nconst API_URL = \"http://localhost:8080/api/ems/\";\n\nclass UserService {\n  getPublicContent() {\n    return axios.get(API_URL + \"all\");\n  }\n\n  getUserBoard(employeeId) {\n    return axios.get(API_URL + \"user/\" + employeeId, {\n      headers: authHeader()\n    });\n  }\n\n  updateUser(employeeId, employee) {\n    return axios.put(API_URL + \"user-update/\" + employeeId, employee, {\n      headers: authHeader()\n    });\n  }\n\n  getHrBoard() {\n    return axios.get(API_URL + \"hr/employee-list\", {\n      headers: authHeader()\n    });\n  }\n\n  createEmployee(employee) {\n    return axios.post(API_URL + \"hr/add-employee/\", employee, {\n      headers: authHeader()\n    });\n  }\n\n  getEmployeeById(employeeId) {\n    return axios.get(API_URL + \"hr/view-employee/\" + employeeId, {\n      headers: authHeader()\n    });\n  }\n\n  updateEmployee(employeeId, employee) {\n    return axios.put(API_URL + \"hr/update-employee/\" + employeeId, employee, {\n      headers: authHeader()\n    });\n  } // soft delete\n\n\n  removeEmployee(employeeId) {\n    return axios.put(API_URL + \"hr/remove/\" + employeeId, {\n      headers: authHeader()\n    });\n  }\n\n  getDeletedEmployee() {\n    return axios.get(API_URL + \"hr/view-deleted-employee\", {\n      headers: authHeader()\n    });\n  }\n\n  restoreDeletedEmployee(employeeId) {\n    return axios.put(API_URL + \"hr/restore/\" + employeeId, {\n      headers: authHeader()\n    });\n  } // hard delete\n\n\n  deleteEmployee(employeeId) {\n    return axios.delete(API_URL + \"hr/delete/\" + employeeId, {\n      headers: authHeader()\n    });\n  }\n\n  forgotPassword(email) {\n    let formData = new FormData();\n    formData.append(\"email\", email);\n    return axios.post(\"http://localhost:8080/forgot_password\", formData);\n  }\n\n  resetPassword(token, password) {\n    let formData = new FormData();\n    formData.append(\"token\", token);\n    formData.append(\"password\", password);\n    return axios.post(\"http://localhost:8080/reset_password\", formData);\n  }\n\n  checkPassword(email, oldPassword) {\n    let formData = new FormData();\n    formData.append(\"email\", email);\n    formData.append(\"oldPassword\", oldPassword);\n    return axios.post(\"http://localhost:8080/change_password/check\", formData, {\n      headers: authHeader()\n    });\n  }\n\n  changePassword(email, password) {\n    let formData = new FormData();\n    formData.append(\"email\", email);\n    formData.append(\"password\", password);\n    return axios.post(\"http://localhost:8080/change_password\", formData, {\n      headers: authHeader()\n    });\n  }\n\n  getAdminBoard() {\n    return axios.get(API_URL + \"admin\", {\n      headers: authHeader()\n    });\n  }\n\n}\n\nexport default new UserService();","map":{"version":3,"sources":["D:/Programming/Projects/KindergartenManagementSystem/Frontend/kindergarten_management_system-frontend/src/services/user-service.js"],"names":["axios","authHeader","API_URL","UserService","getPublicContent","get","getUserBoard","employeeId","headers","updateUser","employee","put","getHrBoard","createEmployee","post","getEmployeeById","updateEmployee","removeEmployee","getDeletedEmployee","restoreDeletedEmployee","deleteEmployee","delete","forgotPassword","email","formData","FormData","append","resetPassword","token","password","checkPassword","oldPassword","changePassword","getAdminBoard"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport authHeader from \"./auth-header\";\r\n\r\nconst API_URL = \"http://localhost:8080/api/ems/\";\r\n\r\nclass UserService {\r\n  getPublicContent() {\r\n    return axios.get(API_URL + \"all\");\r\n  }\r\n\r\n  getUserBoard(employeeId) {\r\n    return axios.get(API_URL + \"user/\" + employeeId, {\r\n      headers: authHeader(),\r\n    });\r\n  }\r\n\r\n  updateUser(employeeId, employee) {\r\n    return axios.put(API_URL + \"user-update/\" + employeeId, employee, {\r\n      headers: authHeader(),\r\n    });\r\n  }\r\n\r\n  getHrBoard() {\r\n    return axios.get(API_URL + \"hr/employee-list\", { headers: authHeader() });\r\n  }\r\n\r\n  createEmployee(employee) {\r\n    return axios.post(API_URL + \"hr/add-employee/\", employee, {\r\n      headers: authHeader(),\r\n    });\r\n  }\r\n\r\n  getEmployeeById(employeeId) {\r\n    return axios.get(API_URL + \"hr/view-employee/\" + employeeId, {\r\n      headers: authHeader(),\r\n    });\r\n  }\r\n\r\n  updateEmployee(employeeId, employee) {\r\n    return axios.put(API_URL + \"hr/update-employee/\" + employeeId, employee, {\r\n      headers: authHeader(),\r\n    });\r\n  }\r\n\r\n  // soft delete\r\n  removeEmployee(employeeId) {\r\n    return axios.put(API_URL + \"hr/remove/\" + employeeId, {\r\n      headers: authHeader(),\r\n    });\r\n  }\r\n\r\n  getDeletedEmployee() {\r\n    return axios.get(API_URL + \"hr/view-deleted-employee\", {\r\n      headers: authHeader(),\r\n    });\r\n  }\r\n\r\n  restoreDeletedEmployee(employeeId) {\r\n    return axios.put(API_URL + \"hr/restore/\" + employeeId, {\r\n      headers: authHeader(),\r\n    });\r\n  }\r\n\r\n  // hard delete\r\n  deleteEmployee(employeeId) {\r\n    return axios.delete(API_URL + \"hr/delete/\" + employeeId, {\r\n      headers: authHeader(),\r\n    });\r\n  }\r\n\r\n  forgotPassword(email) {\r\n    let formData = new FormData();\r\n    formData.append(\"email\", email);\r\n    return axios.post(\"http://localhost:8080/forgot_password\", formData);\r\n  }\r\n\r\n  resetPassword(token, password) {\r\n    let formData = new FormData();\r\n    formData.append(\"token\", token);\r\n    formData.append(\"password\", password);\r\n    return axios.post(\"http://localhost:8080/reset_password\", formData);\r\n  }\r\n\r\n  checkPassword(email, oldPassword) {\r\n    let formData = new FormData();\r\n    formData.append(\"email\", email);\r\n    formData.append(\"oldPassword\", oldPassword);\r\n    return axios.post(\"http://localhost:8080/change_password/check\", formData, {\r\n      headers: authHeader(),\r\n    });\r\n  }\r\n\r\n  changePassword(email, password) {\r\n    let formData = new FormData();\r\n    formData.append(\"email\", email);\r\n    formData.append(\"password\", password);\r\n    return axios.post(\"http://localhost:8080/change_password\", formData, {\r\n      headers: authHeader(),\r\n    });\r\n  }\r\n\r\n  getAdminBoard() {\r\n    return axios.get(API_URL + \"admin\", { headers: authHeader() });\r\n  }\r\n}\r\n\r\nexport default new UserService();\r\n"]},"metadata":{},"sourceType":"module"}